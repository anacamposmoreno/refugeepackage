safety(35,25)
safety <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
}
safety(35,25)
coordinates(df) <- c("lon", "lat")
df <- data.frame(lon = lng, lat = lat)
safety(35,25)
safety <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
}
safety(35,25)
coordinates(df) <- c("lon", "lat")
library(tidyverse)
library(osmdata)
library(sf)
library(ggmap)
library(rgeos)
library(rgdal)
library(leaflet)
safety <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
}
safety(35,25)
library(tmap)
library(raster)
library(sf)
library(sp)
safety <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
}
safety(35,25)
safety <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
mydf <- data.frame(lon = lng, lat = lat)
inter_result <-st_intersection(World, df_sf)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
}
safety(35,25)
return(c)
safety <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
mydf <- data.frame(lon = lng, lat = lat)
inter_result <-st_intersection(World, df_sf)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
return(c)
}
safety(35,25)
mydf <- data.frame(lon = lng, lat = lat, safety=c)
safety <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
mydf <- data.frame(lon = lng, lat = lat)
inter_result <-st_intersection(World, df_sf)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
return(c)
}
safety(35,25)
mydf <- data.frame(lon = lng, lat = lat, safety=c)
lng=24
lat=35
safety(lng,lat)
mydf <- data.frame(lon = lng, lat = lat, safety=c)
View(df)
lng=24
lat=35
c <- safety(lng,lat)
mydf <- data.frame(lon = lng, lat = lat, safety=c)
population <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens)){
b=1} else {b=0}
mydf$pop <- b
}
return(b)
lng=24
lat=35
b <- population(lng,lat)
population <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens)){
b=1} else {b=0}
mydf$pop <- b
return(b)
}
lng=24
lat=35
b <- population(lng,lat)
population <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens)){
b=1} else {b=0}
mydf$pop <- b
return(b)
}
lng=24
lat=35
b <- population(lng,lat)
pop <- as.numeric(inter_result["pop_est_dens"])
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens)){
b=1} else {b=0}
if (pop < mean(World$pop_est_dens)){
b=1} else {b=0}
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens) || is.na(pop)){
b=1} else {b=0}
mydf$pop <- b
return(b)
population <- function(lng, lat) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens) || is.na(pop)){
b=1} else {b=0}
mydf$pop <- b
return(b)
}
lng=24
lat=35
b <- population(lng,lat)
mydf <- data.frame(lon = lng, lat = lat, safety=c)
mydf <- data.frame(lon = lng, lat = lat, population=b)
mydf$new <- b
View(mydf)
mydf$population <- b
mydf$safety <- c
#TODO JUNTO
suitable <- function(lng, lat, buffer=500){
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
q <- df %>%
st_as_sf() %>%
st_buffer(buffer) %>%
opq() %>%
add_osm_feature("waterway", "stream")
result <- osmdata_sf(q)
if(nrow(result$osm_points) == 0) {
a = 0} else {a = 1} #counts
return(a)
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens) || is.na(pop)){
b=1} else {b=0}
mydf$pop <- b
return(b)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
return(c)
}
#TODO JUNTO
suitable <- function(lng, lat, buffer=500){
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
q <- df %>%
st_as_sf() %>%
st_buffer(buffer) %>%
opq() %>%
add_osm_feature("waterway", "stream")
result <- osmdata_sf(q)
if(nrow(result$osm_points) == 0) {
a = 0} else {a = 1} #counts
return(a)
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens) || is.na(pop)){
b=1} else {b=0}
mydf$pop <- b
return(b)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
return(c)
}
mydf$total <- rowSums(mydf[,c('water', 'pop', 'ineq')])
a <- suitable(25,36)
milist <- list()
milist.append(2)
milist <- list.append(2)
milist <- append(milist, 2)
View(milist)
#TODO JUNTO
suitable <- function(lng, lat, buffer=500){
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
newlist <- list()
q <- df %>%
st_as_sf() %>%
st_buffer(buffer) %>%
opq() %>%
add_osm_feature("waterway", "stream")
result <- osmdata_sf(q)
if(nrow(result$osm_points) == 0) {
a = 0} else {a = 1} #counts
newlist <- append(newlist, a)
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens) || is.na(pop)){
b=1} else {b=0}
mydf$pop <- b
newlist <- append(newlist, b)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
mydf$ineq <- c
newlist <- append(newlist, c)
return(newlist)
}
final_list <- suitable(25,36)
#TODO JUNTO
suitable <- function(lng, lat, buffer=500){
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
newlist <- list()
q <- df %>%
st_as_sf() %>%
st_buffer(buffer) %>%
opq() %>%
add_osm_feature("waterway", "stream")
result <- osmdata_sf(q)
if(nrow(result$osm_points) == 0) {
a = 0} else {a = 1} #counts
newlist <- append(newlist, a)
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens) || is.na(pop)){
b=1} else {b=0}
#mydf$pop <- b
newlist <- append(newlist, b)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
#mydf$ineq <- c
newlist <- append(newlist, c)
return(newlist)
}
final_list <- suitable(25,36)
final_list
mydf <- data.frame(long=lng, lat=lat, water=final_list[1], population= final_list[2], safety=final_list[3])
lng=25
lat=36
final_list <- suitable(lng,lat)
final_list
mydf <- data.frame(long=lng, lat=lat, water=final_list[1], population= final_list[2], safety=final_list[3])
View(mydf)
mydf$total <- rowSums(mydf[,c('water', 'pop', 'ineq')])
mydf <- data.frame(long=lng, lat=lat)
mydf$water <- final_list[1]
View(final_list)
View(mydf)
mydf <- data.frame(long=lng, lat=lat)
mydf$water <- final_list[1]
mydf$population <- final_list[2]
mydf$safety <- final_list[3])
mydf$safety <- final_list[3]
mydf$total <- rowSums(mydf[,c('water', 'pop', 'ineq')])
mydf$total <- rowSums(mydf[,c('water', 'population', 'safety')])
mydf$water <- as.numeric(final_list[1])
mydf$population <- as.numeric(final_list[2])
mydf$safety <- as.numeric(final_list[3])
mydf$total <- rowSums(mydf[,c('water', 'population', 'safety')])
View(mydf)
if(mydf['total'] ==3){print('Non basic conditions are violated. This could be a suitable region for a Refugee Camp')
}else {print('Basic conditions were violated. This is not a suitable spot for a Refugee Camp')}
mydf <- data.frame(long=lng, lat=lat)
mydf$water <-  a
View(mydf)
return(mydf)
WaterAround <- function(lng, lat, buffer = 500) {
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
q <- df %>%
st_as_sf() %>%
st_buffer(buffer) %>%
opq() %>%
add_osm_feature("waterway", "stream")
#str(q) query structure
result <- osmdata_sf(q)
if(nrow(result$osm_points) == 0) {
a = 0} else {a = 1} #counts
mydf <- data.frame(long=lng, lat=lat)
mydf$water <-  a
return(mydf)
}
WaterAround(lng, lat)
suitable <- function(lng, lat, buffer=500){
df <- data.frame(lon = lng, lat = lat)
coordinates(df) <- c("lon", "lat")
proj4string(df) <- CRS("+init=epsg:4326")
final_list <- list()
q <- df %>%
st_as_sf() %>%
st_buffer(buffer) %>%
opq() %>%
add_osm_feature("waterway", "stream")
result <- osmdata_sf(q)
if(nrow(result$osm_points) == 0) {
a = 0} else {a = 1} #counts
final_list <- append(final_list, a)
data("World")
df_sf <-st_as_sf(df)
inter_result <-st_intersection(World, df_sf)
pop <- as.numeric(inter_result["pop_est_dens"])
pop <- pop[1]
if (pop < mean(World$pop_est_dens) || is.na(pop)){
b=1} else {b=0}
final_list <- append(final_list, b)
world_ineq <- World %>%drop_na(inequality)
ineq <- as.numeric(inter_result["inequality"])
ineq <- ineq[1]
if (ineq < mean(world_ineq$inequality) || is.na(ineq)){
c=1} else {c=0}
final_list <- append(final_list, c)
mydf <- data.frame(long=lng, lat=lat)
mydf$water <- as.numeric(final_list[1])
mydf$population <- as.numeric(final_list[2])
mydf$safety <- as.numeric(final_list[3])
mydf$total <- rowSums(mydf[,c('water', 'population', 'safety')])
if(mydf['total'] ==3){return('Non basic conditions are violated. This could be a suitable region for a Refugee Camp')
}else {return('Basic conditions were violated. This is not a suitable spot for a Refugee Camp')}
}
lng=25
lat=36
suitable(lng, lat)
